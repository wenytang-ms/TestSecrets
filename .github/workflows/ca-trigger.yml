name: CA trigger

on:
  workflow_run:
    workflows: ["CA"]
    branches: ["main", "develop", "ga"]
    types: ["completed"]

jobs:
  DownloadAndOutput:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      pre_id: ${{ steps.preid.outputs.result }}
      server_version: ${{ steps.version.outputs.result }}
    steps:
      - name: Download artifact
        uses: actions/github-script@v6
        with:
          script: |
            let allArtifacts = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo: context.repo.repo,
              run_id: context.payload.workflow_run.id,
            });
            let matchArtifact = allArtifacts.data.artifacts.filter((artifact) => {
              return artifact.name == "release"
            })[0];
            let download = await github.rest.actions.downloadArtifact({
              owner: context.repo.owner,
              repo: context.repo.repo,
              artifact_id: matchArtifact.id,
              archive_format: 'zip',
            });
            let fs = require('fs');
            fs.writeFileSync(`${process.env.GITHUB_WORKSPACE}/release.zip`, Buffer.from(download.data));
      
      - name: Unzip artifact
        run: unzip release.zip
        
      - name: Get server version
        id: version
        uses: actions/github-script@v6
        with:
          script: |
            let rawData = require('fs').readFileSync('release.json', {encoding: 'utf8', flag: 'r'})
            let pkgs = JSON.parse(rawData)
            for(let pkg of pkgs) {
              if(pkg.name === "@wenyt-ms/gama") {
                console.log('======= version: ', pkg.version)
                return pkg.version
              }
            }

      - name: echo output
        uses: actions/github-script@v6
        with: 
          scripts: |
            let var = ${{steps.version.outputs.result}}
            console.log("=========== version is:" var)

      # - name: Get server preid 
      #   id: preid
      #   uses: actions/github-script@v6
      #   with:
      #     script: |
      #       let strArray = String(require('fs').readFileSync('./release.txt')).trim().split(' ');
      #       let server = strArray.filter(item => item.includes('@wenyt-ms/gama'))[0]
      #       let version = server.split("@")[2].split('-')[1]
      #       if(version) {
      #         return version.split('.')[0];
      #       }
      #       else {
      #         return "stable"
      #       }

  CallAzurePipeline:
    runs-on: ubuntu-latest
    needs: DownloadAndOutput
    steps:
      - name: output
        run: |
          echo ================================ ${{needs.downloadAndOutput.outputs.pre_id}}
          echo -------------------------------- ${{needs.downloadAndOutput.outputs.server_version}}}