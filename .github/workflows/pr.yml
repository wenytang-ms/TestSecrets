name: "Lint PR"

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
jobs:
  attension-on-version:
    if: ${{ github.event_name ==  'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - name: echo branch
        run: |
          echo ${GITHUB_BASE_REF}
      - name: checkout branch
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: ${{ github.ref }}
      - name: check feature history
        id: description
        run: | 
          head=$(git describe --first-parent --abbrev=0)
          history_cli=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/alpha)
          history_toolkit=$(git log --pretty=format:"%s %h" $head...HEAD -- packages/beta)
          info=$(echo -e "$history_cli" '\n======================' "$history_toolkit")
          echo "LERNA_HISTORY<<EOF" >> $GITHUB_ENV
          echo "$info" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Setup node
        uses: actions/setup-node@v2.1.2
        with:
          node-version: 14
      
      - name: lerna version
        run: |
          git checkout wenyt/tt321
          npx lerna version --conventional-commits --conventional-prerelease --no-git-tag-version --no-push --allow-branch wenyt/tt321 --yes
          echo "LERNA_PKG_INFO<<EOF" >> $GITHUB_ENV
          echo "$(lerna ls --long)" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - uses: actions/github-script@v6
        id: set-output
        with:
          script: |
            core.setOutput("output1", `${{ env.LERNA_PKG_INFO }}\n${{ env.LERNA_HISTORY }}`); 
      
      - uses: riskledger/update-pr-description@v2
        with:
          body: ${{steps.set-output.outputs.output1}}
          token: ${{ secrets.GITHUB_TOKEN }}